{"ast":null,"code":"var _jsxFileName = \"/home/junior/Desktop/wyncode/c39_midterm_laurel_luis_eugene_marlon/client/src/components/AlbumPage.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { BiPlayCircle, BiPauseCircle } from 'react-icons/bi';\n\nconst AlbumPage = ({\n  handleChange\n}) => {\n  var _album$, _album$2, _album$3, _album$4, _album$5;\n\n  const [album, setAlbum] = useState([]);\n  const [play, setPlay] = useState(false);\n  let {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await axios.get(`/album/${id}`);\n      setAlbum(response.data.results);\n    };\n\n    fetchData();\n  }, [id]);\n\n  const handleSong = song => {\n    setPlay(!play);\n    const audio = new Audio(song);\n    audio.play();\n\n    if (play) {\n      audio.pause();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"AlbumPageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: 230\n    },\n    src: (_album$ = album[0]) === null || _album$ === void 0 ? void 0 : _album$.artworkUrl100,\n    alt: \"albumcover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    class: \"AlbumsText\",\n    id: \"AlbumNames\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, (_album$2 = album[0]) === null || _album$2 === void 0 ? void 0 : _album$2.collectionName, \" \", (_album$3 = album[0]) === null || _album$3 === void 0 ? void 0 : _album$3.contentAdvisoryRating), /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"AlbumsText\",\n    id: \"AlbumArtistName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, (_album$4 = album[0]) === null || _album$4 === void 0 ? void 0 : _album$4.artistName), /*#__PURE__*/React.createElement(\"h6\", {\n    class: \"AlbumsText\",\n    id: \"AlbumGenre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, (_album$5 = album[0]) === null || _album$5 === void 0 ? void 0 : _album$5.primaryGenreName), album.map((track, index) => {\n    return (\n      /*#__PURE__*/\n      //   // <div >\n      //  //<audio src={track.previewUrl}>\n      // <button onClick={}>Play</button>\n      //  </audio>\n      //  </div>\n      React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        class: \"AlbumsText\",\n        id: \"songlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, track.trackName, /*#__PURE__*/React.createElement(BiPlayCircle, {\n        onClick: () => handleSong(track.previewUrl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(BiPauseCircle, {\n        onClick: handleSong,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }))))\n    );\n  }));\n};\n\nexport default AlbumPage;","map":{"version":3,"sources":["/home/junior/Desktop/wyncode/c39_midterm_laurel_luis_eugene_marlon/client/src/components/AlbumPage.jsx"],"names":["React","useState","useEffect","useParams","axios","BiPlayCircle","BiPauseCircle","AlbumPage","handleChange","album","setAlbum","play","setPlay","id","fetchData","response","get","data","results","handleSong","song","audio","Audio","pause","width","artworkUrl100","collectionName","contentAdvisoryRating","artistName","primaryGenreName","map","track","index","trackName","previewUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { BiPlayCircle, BiPauseCircle } from 'react-icons/bi';\n\nconst AlbumPage = ({ handleChange }) => {\n  const [album, setAlbum] = useState([]);\n  const [play, setPlay] = useState(false);\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      let response = await axios.get(`/album/${id}`);\n      setAlbum(response.data.results);\n    };\n    fetchData();\n  }, [id]);\n\n  const handleSong = (song) => {\n    setPlay(!play);\n    const audio = new Audio(song);\n    audio.play();\n    if (play) {\n      audio.pause();\n    }\n  };\n\n  return (\n    <div class=\"AlbumPageContainer\">\n      <img\n        style={{ width: 230 }}\n        src={album[0]?.artworkUrl100}\n        alt=\"albumcover\"\n      />\n      <h3 class=\"AlbumsText\" id=\"AlbumNames\">\n        {album[0]?.collectionName} {album[0]?.contentAdvisoryRating}\n      </h3>\n      <h5 class=\"AlbumsText\" id=\"AlbumArtistName\">\n        {album[0]?.artistName}\n      </h5>\n      <h6 class=\"AlbumsText\" id=\"AlbumGenre\">\n        {album[0]?.primaryGenreName}\n      </h6>\n\n      {album.map((track, index) => {\n        return (\n          //   // <div >\n          //  //<audio src={track.previewUrl}>\n          // <button onClick={}>Play</button>\n          //  </audio>\n          //  </div>\n          <div key={index}>\n            <ul>\n              <li class=\"AlbumsText\" id=\"songlist\">\n                {track.trackName}\n\n                <BiPlayCircle onClick={() => handleSong(track.previewUrl)} />\n                <BiPauseCircle onClick={handleSong} />\n                {/* <audio src={track.previewUrl} controls /> */}\n              </li>\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AlbumPage;\n"]},"metadata":{},"sourceType":"module"}